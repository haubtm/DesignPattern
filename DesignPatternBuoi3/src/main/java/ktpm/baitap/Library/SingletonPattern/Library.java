package ktpm.baitap.Library.SingletonPattern;

import java.util.ArrayList;
import java.util.List;

public class Library {
    private static Library instance;
    private List<Book> books;

    // Private constructor ƒë·ªÉ ngƒÉn ch·∫∑n t·∫°o nhi·ªÅu ƒë·ªëi t∆∞·ª£ng
    private Library() {
        books = new ArrayList<>();
    }

    // Singleton - Ch·ªâ c√≥ m·ªôt instance c·ªßa Library
    public static synchronized Library getInstance() {
        if (instance == null) {
            instance = new Library();
        }
        return instance;
    }

    // Th√™m s√°ch m·ªõi v√†o th∆∞ vi·ªán
    public void addBook(Book book) {
        books.add(book);
        System.out.println("üìñ ƒê√£ th√™m s√°ch m·ªõi: " + book.getTitle());
    }

    // Hi·ªÉn th·ªã danh s√°ch s√°ch c√≥ s·∫µn
    public void displayAvailableBooks() {
        System.out.println("\nüìö Danh s√°ch s√°ch c√≥ s·∫µn:");
        for (Book book : books) {
            if (book.isAvailable()) {
                System.out.println("- " + book.getTitle() + " (T√°c gi·∫£: " + book.getAuthor() + ")");
            }
        }
    }

    // M∆∞·ª£n s√°ch theo t√™n
    public void borrowBook(String title) {
        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(title) && book.isAvailable()) {
                book.borrow();
                return;
            }
        }
        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s√°ch: " + title);
    }

    // Tr·∫£ s√°ch theo t√™n
    public void returnBook(String title) {
        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(title) && !book.isAvailable()) {
                book.returnBook();
                return;
            }
        }
        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s√°ch c·∫ßn tr·∫£: " + title);
    }
}
